---
title: "Selecting Projection Indices"
author: "Tina Rashid Jafari"
vignette: >
  %\VignetteIndexEntry{Selecting Projection Indices}
  %\VignetteEngine{quarto::html}
  %\VignetteEncoding{UTF-8}
---

```{r, include=FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  message=FALSE, 
  warning=FALSE
)
```

## Overview

This vignette introduces five wrapper functions that give different index families the same interface: a function that accepts an n×2 numeric matrix and returns one numeric index value.

* `scagIndex(indexName)` – scagnostics (via `cassowaryr`).
* `mineIndex(indexName)` – MINE family (via `minerva`).
* `mineIndexE(indexName)` – MINE with the updated `"mic_e"` estimator.
* `holesR()` – rescaled `tourr::holes()` to roughly $[0,1]$.
* `cmassR()` – rescaled `tourr::cmass()` to roughly  $[0,1]$.

```{r}
library(spinebil)
library(ggplot2)
library(dplyr)
```

All returned objects are functions that accept an n×2 numeric matrix and return one number, ready for use in tours, tracing, smoothing, etc.


## What the Function Does

`scagIndex(indexName)`

Returns a function `f(mat)` that runs scagnostics (via `cassowaryr::calc_scags_wide`) and extracts the requested measure `indexName` (e.g., `"stringy"`).

`mineIndex(indexName)` and `mineIndexE(indexName)`

Return a function `f(mat)` that calls `minerva::mine(mat[,1], mat[,2])` and pulls the requested MINE score.
`mineIndexE()` uses `est = "mic_e"`.

`holesR()` and `cmassR()`

Return functions `f(mat)` that evaluate `tourr::holes()` / `tourr::cmass()` and apply a simple rescaling:
  
* `holesR()`: values `< 0.8 → 0`, else linear map to $[0,1]$.
* `cmassR()`: values `< 0.2 → 0`, else linear map to $[0,1]$.


## Function usage

```r
scagIndex("stringy")
mineIndex("MIC")
mineIndexE("MIC")
holesR()
cmassR()
```

**Dependencies:**
  
* `scagIndex()` needs `cassowaryr` .
* `mineIndex()`/`mineIndexE()` need `minerva`.
* `holesR()`/`cmassR()` need `tourr`.
If a package isn’t installed, install it or guard your code with `requireNamespace()`.


## Return value
  
Each helper returns a function.


These returned functions plug directly into other `spinebil` workflows, e.g., `getTrace()`, `compareSmoothing()`, `profileRotation()`, `ppi_scale()`, etc.


