---
title: "Comparing Index Scale on Structured vs. Noisy Data"
author: "Tina Rashid Jafari"
vignette: >
  %\VignetteIndexEntry{Comparing Index Scale on Structured vs. Noisy Data}
  %\VignetteEngine{quarto::html}
  %\VignetteEncoding{UTF-8}
---

```{r, include=FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  message=FALSE, 
  warning=FALSE
)
```

## Overview
  
`ppi_scale()` runs simulations to compare a projection pursuit index (PPI) on:
  
1) Structured dataset (your input), and
2) Pure Gaussian noise (same sample size).

For every pair of variables and across many simulations, it records the index values for both cases so you can see the scale and separation of the index between structure and noise.
  
```{r setup, message=FALSE, warning=FALSE}
library(spinebil) 
library(tidyverse)
```

## What the Function Does

### `ppi_scale(data, index_fun, n_sim = 100, n_obs = 500, seed = NULL)`

* **Pairs:** builds all 2D variable pairs from `data`.
* **Simulations:** for each simulation `1,...,n_sim` and each pair:
  
  1. **Structured value (`sigma = 0`)** — compute the index on the actual pair.
  2. **Noise value (`sigma = 1`)** — generate `n_obs` standard-normal `x`, `y`, scale to mean 0 / sd 1, compute the index.

* **Output:** a tidy table with simulation id, variable pair, `sigma ∈ {0,1}`, and `index` value.


## Function usage

```r
ppi_scale(
  data,        
  index_fun, 
  n_sim = 100,
  n_obs = 500,
  seed = NULL
)
```

**Arguments:**
  
* `data` — data frame/tibble/matrix; (>= 2 numeric columns).
* `index_fun` — function: takes a 2-column matrix and returns a numeric scalar (e.g., `scagIndex("stringy")`).
* `n_sim` — number of simulations.
* `n_obs` — number of observations.
* `seed` — optional seed for reproducibility.


## Example usage

Let’s evaluate the `stringy` index from the `cassowaryr` package to see how the scale change for pure noise and structure. 

```{r}
res <- ppi_scale(data_gen("polynomial", degree = 3), scagIndex("stringy"), n_sim = 3)

head(res)
```


Here `sigma = 0` is structured and `sigma = 1` is  pure noise.



### Boxplots: structured vs noise per variable pair

```{r}
res %>%
  mutate(sigma = factor(sigma, levels = c(0,1), labels = c("structured","noise"))) %>%
  ggplot(aes(x = sigma, y = index, fill = sigma)) +
  geom_boxplot() +
  facet_wrap(~ var_pair, scales = "free_y") +
  labs(
    title = "Index scale on structured vs noisy data",
    x = NULL, y = "index"
  ) 
```

## Return value

`ppi_scale()` returns a tibble with columns:
  
* `simulation`: simulation index
* `var_i`, `var_j`: the two variable names
* `var_pair`: `"var_i-var_j"` compact label.
* `sigma`: `0 = structured`, `1 = noise`
* `index`: the index value from `index_fun`
